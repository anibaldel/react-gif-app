{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAa5C,OACI,0BAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,OAKd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAhBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCJlBG,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAElC,OADAC,QAAQC,IAAIJ,EAAGC,EAAMC,GAEjB,yBAAKG,UAAY,0CACb,yBAAKC,IAAKJ,EAAKK,IAAKN,M,uBCNnBO,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbR,EADa,iDACoCS,UAAWF,GAD/C,+DAGAG,MAAMV,GAHN,cAGbW,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBlB,QAVvB,kBAeZc,GAfY,4CAAH,sDCIPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZvB,mBAAS,CAC/B6B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNjB,EAAQC,GACHiB,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGtB,CAACb,IAEGc,EDXyBK,CAAanB,GAAhCU,EAJsB,EAI5BJ,KAAcO,EAJc,EAIdA,QAIrB,OACI,oCACI,wBAAIjB,UAAU,qCAAqCI,GACjDa,GAAW,uBAAGjB,UAAU,oCAAb,WACb,yBAAKA,UAAU,YAGPc,EAAOF,KAAI,SAAAC,GAAG,OACd,kBAAC,EAAD,eACIW,IAAOX,EAAIlB,IACPkB,UEabY,EA/BM,WAAO,IAAD,EAEa5C,mBAAS,CAAC,cAFvB,mBAEhB6C,EAFgB,KAEJ9C,EAFI,KAQvB,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BAEQ8C,EAAWd,KAAI,SAAAR,GAAQ,OAClB,kBAAC,EAAD,CACAoB,IAAKpB,EACLA,SAAYA,U,MChBrCuB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.4919e194.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AddCategory = ({setcategories}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e)=> {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length>2) {\r\n            setcategories(cats => [inputValue,...cats]);  \r\n            setInputValue('');\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit= {handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value= {inputValue}\r\n                onChange= {handleInputChange}\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setcategories: PropTypes.func.isRequired\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    console.log(id,title,url)\r\n    return (\r\n        <div className = \"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n           \r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=pocvrGCQ6yV7ypqJhwyNuLkswzY4EPg8`;\r\n\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n\r\n    \r\n    const {data: images, loading} = useFetchGifs(category);\r\n    \r\n\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"car-grid\">\r\n\r\n                {\r\n                    images.map(img => (\r\n                    <GifGridItem\r\n                        key = {img.id}\r\n                        {...img}\r\n                    />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState,useEffect} from 'react'\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs=> {\r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setcategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setcategories(cats => [...categories, 'Hunter']);\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setcategories={setcategories}/>\r\n            <hr/>\r\n\r\n            <ol>\r\n                { \r\n                    categories.map(category=>\r\n                         <GifGrid \r\n                         key={category}\r\n                         category = {category}\r\n                         />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    );\r\n        \r\n} \r\n\r\n\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}